Description: 
    This Cft deploys a VPC with IG attached. It will have two subnets 1 private and 1 public
    Public subnet will have NAT gateway attached.
Parameters:
  Environment:
    Description: "Environment"
    Type: String
    Default: Assignment
  VpcCIDR: 
    Description: CIDR of VPC
    Type: String
    Default: 172.20.0.0/16
  MyPublicCIDR:
    Description: CIDR of public subnet
    Type: String
    Default: 172.20.10.0/24
  MyPrivateCIDR:
    Description: CIDR of private CIDR
    Type: String
    Default: 172.20.20.0/24

Resources:
    myVPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            Tags: 
                - Key: Name 
                  Value: !Ref Environment            
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref Environment            
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref myVPC
    PublicSubnet: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref myVPC
            CidrBlock: !Ref MyPublicCIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Public Subnet
    PrivateSubnet: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref myVPC
            CidrBlock: !Ref MyPrivateCIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Private Subnet
    NatGatewayEIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc
    NatGateway: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGatewayEIP.AllocationId
            SubnetId: !Ref PublicSubnet
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId:  !Ref myVPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref myVPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${Environment} Private Routes

    DefaultPrivateRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway

    PrivateSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet

Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref myVPC

    PublicSubnet:
        Description: Public Subnet 
        Value: !Ref PublicSubnet

    PrivateSubnet:
        Description: Private Subbnet
        Value:  !Ref PrivateSubnet
        

